{"is_source_file": true, "format": "TypeScript", "description": "This file provides utility functions for resolving and normalizing backend and frontend base URLs in a web application, with environment-aware logic and considerations for browser vs server environments.", "external_files": ["process.env"], "external_methods": ["typeof window", "window.location.origin", "process.env.NEXT_PUBLIC_BACKEND_URL", "process.env.NEXT_PUBLIC_BACKEND_BASE_URL", "process.env.NEXT_PUBLIC_BACKEND_PUBLIC_BASE_URL", "process.env.NEXT_PUBLIC_FRONTEND_BASE_URL"], "published": ["getBackendPublicBaseUrl", "getFrontendPublicBaseUrl", "getBackendBaseUrl"], "classes": [], "methods": [{"name": "function normalizeBase(url: string): string { normalizeBase", "description": "Trims trailing slashes from the URL to produce a normalized base URL.", "scope": "", "scopeKind": ""}, {"name": "export function getBackendPublicBaseUrl(): string { getBackendPublicBaseUrl", "description": "Returns the public backend base URL, resolving environment variables, window location origin in browsers, or defaulting to localhost for development.", "scope": "", "scopeKind": ""}, {"name": "export function getFrontendPublicBaseUrl(): string { getFrontendPublicBaseUrl", "description": "Returns the publicly configured frontend base URL or an empty string if not configured.", "scope": "", "scopeKind": ""}, {"name": "export function getBackendBaseUrl(): string { getBackendBaseUrl", "description": "Alias for getBackendPublicBaseUrl(), providing consistent API endpoint URL resolution.", "scope": "", "scopeKind": ""}], "calls": ["process.env.NEXT_PUBLIC_BACKEND_URL", "process.env.NEXT_PUBLIC_BACKEND_BASE_URL", "process.env.NEXT_PUBLIC_BACKEND_PUBLIC_BASE_URL", "normalizeBase()", "window.location.origin"], "search-terms": ["URL normalization", "Next.js environment variables", "public URL configuration", "browser environment detection", "fallback localhost URL"], "state": 2, "file_id": 79, "knowledge_revision": 297, "git_revision": "", "revision_history": [{"287": ""}, {"290": ""}, {"296": ""}, {"297": ""}], "ctags": [{"_type": "tag", "name": "explicit", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^  const explicit =$/", "language": "TypeScript", "kind": "constant", "scope": "getBackendPublicBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "explicit", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^  const explicit =$/", "language": "TypeScript", "kind": "constant", "scope": "getFrontendPublicBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "getBackendBaseUrl", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^export function getBackendBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getBackendPublicBaseUrl", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^export function getBackendPublicBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getFrontendPublicBaseUrl", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^export function getFrontendPublicBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isBrowser", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^const isBrowser = typeof window !== \"undefined\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "normalizeBase", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/url.ts", "pattern": "/^function normalizeBase(url: string): string {$/", "language": "TypeScript", "kind": "function"}], "hash": "3cacdc7727cbfc7f3b13492a7e8f0f78", "format-version": 4, "code-base-name": "integration_frontend", "filename": "integration_frontend/src/lib/url.ts"}