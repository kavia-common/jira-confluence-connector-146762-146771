{"is_source_file": true, "format": "TypeScript", "description": "This TypeScript source file provides a set of API functions for frontend integration with a backend service. It includes utility functions for fetching API URLs, making authenticated requests, and specific API calls such as token issuance, user creation, and plugin integrations with Jira and Confluence.", "external_files": ["./types"], "external_methods": [], "published": ["getApiBaseUrl", "issueToken", "createUser", "connectJira", "connectConfluence", "fetchJiraProjects", "fetchConfluencePages"], "classes": [], "methods": [{"name": "export function getApiBaseUrl(): string { getApiBaseUrl", "description": "Returns the base URL for API calls, based on environment variable or defaulting to empty string.", "scope": "", "scopeKind": ""}, {"name": "async function apiFetch<T>( apiFetch", "description": "Internal helper function that wraps fetch to include authorization headers if a token exists, and handles response parsing and errors.", "scope": "", "scopeKind": ""}, {"name": "export async function issueToken(body: UserCreate): Promise<TokenResponse> { issueToken", "description": "Sends a POST request to obtain an authentication token.", "scope": "", "scopeKind": ""}, {"name": "export async function createUser(body: UserCreate): Promise<UserRead> { createUser", "description": "Creates a user record in the backend via a POST request.", "scope": "", "scopeKind": ""}, {"name": "export async function connectJira(payload: ConnectRequest): Promise<ConnectResponse> { connectJira", "description": "Saves Jira connection settings for the user.", "scope": "", "scopeKind": ""}, {"name": "export async function connectConfluence(payload: ConnectRequest): Promise<ConnectResponse> { connectConfluence", "description": "Saves Confluence connection settings for the user.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchJiraProjects(): Promise<JiraProjectsFetchResponse> { fetchJiraProjects", "description": "Fetches Jira projects for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchConfluencePages(): Promise<ConfluencePagesFetchResponse> { fetchConfluencePages", "description": "Fetches Confluence pages for the authenticated user.", "scope": "", "scopeKind": ""}], "calls": ["getApiBaseUrl", "localStorage.getItem", "fetch"], "search-terms": ["api functions", "Jira integration", "Confluence integration", "fetch wrapper", "auth token", "API URL"], "state": 2, "file_id": 13, "knowledge_revision": 28, "git_revision": "", "ctags": [{"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^async function apiFetch<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^  const base = getApiBaseUrl();$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "connectConfluence", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export async function connectConfluence(payload: ConnectRequest): Promise<ConnectResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "connectJira", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export async function connectJira(payload: ConnectRequest): Promise<ConnectResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createUser", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export async function createUser(body: UserCreate): Promise<UserRead> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "env", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^  const env = process.env.NEXT_PUBLIC_BACKEND_URL;$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "fetchConfluencePages", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export async function fetchConfluencePages(): Promise<ConfluencePagesFetchResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchJiraProjects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export async function fetchJiraProjects(): Promise<JiraProjectsFetchResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getApiBaseUrl", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export function getApiBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^  const headers = new Headers(init?.headers || {});$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "issueToken", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^export async function issueToken(body: UserCreate): Promise<TokenResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(url, { ...init, headers });$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^    const text = await res.text().catch(() => \"\");$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^  const token = typeof window !== \"undefined\" ? localStorage.getItem(\"access_token\") : null;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146771/integration_frontend/src/lib/api.ts", "pattern": "/^  const url = `${base}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}], "hash": "2d8b18b548c244a2a03c434d5663cd9f", "format-version": 4, "code-base-name": "integration_frontend", "filename": "integration_frontend/src/lib/api.ts", "revision_history": [{"28": ""}]}